head(ab2mat)
#8
#Understory
#Plot with sites
genus <- ab2mat$understory
Genus <- "Uderstory"
#Boundary layer regression
blr(log, emat$FireRotation, genus, Genus)
#9
#Vines
#Plot with sites
genus <- ab2mat$vine
Genus <- "vine"
#Boundary layer regression
blr(log, emat$FireRotation, genus, Genus)
#10
#All Shrubs
#Plot with sites
genus <- ab2mat$shrubs + ab2mat$subshrubs + ab2mat$palmetto
Genus <- "All Shrubs"
#Boundary layer regression
blr(log, emat$FireRotation, genus, Genus)
head(ab2mat)
#10
#All Shrubs
#Plot with sites
genus <- ab2mat$shrub + ab2mat$subshrub + ab2mat$palmetto
Genus <- "All Shrubs"
#Boundary layer regression
blr(log, emat$FireRotation, genus, Genus)
#11
#All woody
#Plot with sites
genus <- ab2mat$shrub + ab2mat$subshrub + ab2mat$palmetto + ab2mat$understory + ab2mat$vine
Genus <- "Woody"
#Boundary layer regression
blr(log, emat$FireRotation, genus, Genus)
#1
#Forb
#Plot with sites
genus <- ab2mat$forb
Genus <- "Forb"
#Boundary layer regression
blr(log, emat$FireRotation, genus, Genus)
genus <- ab2mat$bunchgrass + ab2mat$grass
Genus <- "All Graminoids"
#Boundary layer regression
blr(log, emat$FireRotation, genus, Genus)
#Wiregrass
#Plot with sites
genus <- ab2mat$bunchgrass
Genus <- "Bunchgrass"
#Boundary layer regression
blr(log, emat$FireRotation, genus, Genus)
#Rhizotomous Grasses
#Plot with sites
genus <- ab2mat$grass
Genus <- "Rhizomatous Grass"
#Boundary layer regression
blr(log, emat$FireRotation, genus, Genus)
genus <- ab2mat$palmetto
Genus <- "Palmetto"
#Boundary layer regression
blr(log, emat$FireRotation, genus, Genus)
#6
#Shrub
#Plot with sites
genus <- ab2mat$shrub
Genus <- "Shrubs"
#Boundary layer regression
blr(log, emat$FireRotation, genus, Genus)
genus <- ab2mat$subshrub
Genus <- "Sub-shrubs"
#Boundary layer regression
blr(log, emat$FireRotation, genus, Genus)
#Understory
#Plot with sites
genus <- ab2mat$understory
Genus <- "Uderstory"
#Boundary layer regression
blr(log, emat$FireRotation, genus, Genus)
genus <- ab2mat$vine
Genus <- "vine"
#Boundary layer regression
blr(log, emat$FireRotation, genus, Genus)
genus <- ab2mat$shrub + ab2mat$subshrub + ab2mat$palmetto
Genus <- "All Shrubs"
#Boundary layer regression
blr(log, emat$FireRotation, genus, Genus)
#Plot with sites
genus <- ab2mat$shrub + ab2mat$subshrub + ab2mat$palmetto + ab2mat$understory + ab2mat$vine
Genus <- "Woody"
#Boundary layer regression
blr(log, emat$FireRotation, genus, Genus)
#2
#Grass
#Plot with sites
genus <- ab2mat$bunchgrass + ab2mat$grass
Genus <- "All Graminoids"
#Boundary layer regression
blr(log, emat$FireRotation, genus, Genus)
#Forb
#Plot with sites
genus <- ab2mat$forb
Genus <- "Forb"
#Boundary layer regression
blr(log, emat$FireRotation, genus, Genus)
#2
#Grass
#Plot with sites
genus <- ab2mat$bunchgrass + ab2mat$grass
Genus <- "All Graminoids"
#Boundary layer regression
blr(log, emat$FireRotation, genus, Genus)
#1
#Forb
#Plot with sites
genus <- ab2mat$forb
Genus <- "Forb"
#Boundary layer regression
blr(log, emat$FireRotation, genus, Genus)
head(siteCover2)
dev.off()
set.panel(2,4)
cf <- 0.5
#Create ab2mat object
ab2mat <- biomassOrig
#Create an emat object
emat <- siteEnv3
#1
#Forb
#Plot with sites
genus <- ab2mat$forb
Genus <- "Forb"
#Boundary layer regression
blr(log, emat$FireRotation, genus, Genus)
#3
#Wiregrass
#Plot with sites
genus <- ab2mat$bunchgrass
Genus <- "Bunchgrass"
#Boundary layer regression
blr(log, emat$FireRotation, genus, Genus)
#4
#Rhizotomous Grasses
#Plot with sites
genus <- ab2mat$grass
Genus <- "Rhizomatous Grass"
#Boundary layer regression
blr(log, emat$FireRotation, genus, Genus)
#6
#Shrub
#Plot with sites
genus <- ab2mat$shrub + ab2mat$palmetto
Genus <- "Shrubs"
#Boundary layer regression
blr(log, emat$FireRotation, genus, Genus)
#7
#Sub-shrub
#Plot with sites
genus <- ab2mat$subshrub
Genus <- "Sub-shrubs"
#Boundary layer regression
blr(log, emat$FireRotation, genus, Genus)
#8
#Understory
#Plot with sites
genus <- ab2mat$understory
Genus <- "Uderstory"
#Boundary layer regression
blr(log, emat$FireRotation, genus, Genus)
#9
#Vines
#Plot with sites
genus <- ab2mat$vine
Genus <- "vine"
#Boundary layer regression
blr(log, emat$FireRotation, genus, Genus)
dev.off()
set.panel(2,4)
cf <- 0.5
#Create ab2mat object
ab2mat <- biomassOrig
#Create an emat object
emat <- siteEnv3
#1
#Forb
#Plot with sites
genus <- ab2mat$forb
Genus <- "Forb"
#Boundary layer regression
blr(log, emat$FireRotation, genus, Genus)
#3
#Wiregrass
#Plot with sites
genus <- ab2mat$bunchgrass
Genus <- "Bunchgrass"
#Boundary layer regression
blr(log, emat$FireRotation, genus, Genus)
#4
#Rhizotomous Grasses
#Plot with sites
genus <- ab2mat$grass
Genus <- "Rhizomatous Grass"
#Boundary layer regression
blr(log, emat$FireRotation, genus, Genus)
#6
#Shrub
#Plot with sites
genus <- ab2mat$shrub + ab2mat$palmetto
Genus <- "Shrubs"
#Boundary layer regression
blr(log, emat$FireRotation, genus, Genus)
#7
#Sub-shrub
#Plot with sites
genus <- ab2mat$subshrub
Genus <- "Sub-shrubs"
#Boundary layer regression
blr(log, emat$FireRotation, genus, Genus)
#8
#Understory
#Plot with sites
genus <- ab2mat$understory
Genus <- "Hardwood Trees"
#Boundary layer regression
blr(log, emat$FireRotation, genus, Genus)
#9
#Vines
#Plot with sites
genus <- ab2mat$vine
Genus <- "Vines"
#Boundary layer regression
blr(log, emat$FireRotation, genus, Genus)
#PANEL PLOT BY ORIGINAL DATA __1
dev.off()
head(ab2mat)
plotBiomass <- read.table(
"sef_Ecology_BiomassPlotMatrix_Ep1_FuncGroupOutlierX_2014-10-21_10.13.08.csv",
header=TRUE, sep=",", na.strings="NA", dec=".", strip.white=TRUE,
stringsAsFactors = F)
#For cover, remove non-plant categories, these are unecessary for our analysis.
#dead woody,
plotBiomass2 <- plotBiomass[,!colnames(plotBiomass) == "dead.woody"]
#########################################################
#2C: calculate site means for untransformed plot-level data.
#USED FOR DATA SCREENING ONLY - DATA NOT USED IN ANALYSIS.
#Calculate untransformed site means from plot-level data
siteBiomass <- summarize(X = plotBiomass2[,3:length(plotBiomass2[1,])], by = plotBiomass2$siteName,
colMeans, stat.name = colnames(plotBiomass2)[3])
colnames(siteBiomass)[1] <- "siteName"
#Remove site names from matrix columns and assign as row names.
#All biomass >> UNTRANSFORMED
siteBiomass2 <- siteBiomass[,2:(length(siteBiomass[1,]))]
rownames(siteBiomass2) <- siteBiomass[,1]
#Calculate untransformed site means from plot-level data
siteBiomass <- summarize(X = plotBiomass2[,4:length(plotBiomass2[1,])], by = plotBiomass2$siteName,
colMeans, stat.name = colnames(plotBiomass2)[4])
colnames(siteBiomass)[1] <- "siteName"
#Remove site names from matrix columns and assign as row names.
#All biomass >> UNTRANSFORMED
siteBiomass2 <- siteBiomass[,3:(length(siteBiomass[1,]))]
rownames(siteBiomass2) <- siteBiomass[,1]
#Conduct log-transformation on plot-level data
#>>>>Justification for log-transformation?
plotBiomassLogTrans <- data.trans(plotBiomass2[,4:length(plotBiomass2[1,])], method = 'log',
plot = F)
#Calculate site means from log-transformed plot-level data (USED IN ANALYSIS)
siteBiomassLogTrans <- summarize(X = plotBiomassLogTrans, by = plotBiomass$siteName, colMeans,
stat.name = colnames(plotBiomass)[4])
colnames(siteBiomassLogTrans)[1] <- "siteName"
#Remove site names from matrix columns and assign as row names.
#All biomass >> LOG-TRANSFORMED
siteBiomassLogTrans2 <- siteBiomassLogTrans[,3:(length(siteBiomassLogTrans[1,]))]
rownames(siteBiomassLogTrans2) <- siteBiomassLogTrans[,1]
#Create ab2mat object
ab2mat <- biomassOrig
#Create an emat object
emat <- siteEnv3
#1
#Forb
#Plot with sites
genus <- ab2mat$forb
Genus <- "Forb"
#Boundary layer regression
blr(log, emat$FireRotation, genus, Genus)
#1
#Forb
#Plot with sites
genus <- ab2mat$forb
Genus <- "Forb"
plot(emat$FireRotation, genus, type = "n",
xlab = "Fire Rotation (years)", ylab = "Biomass (Mg/ha)")
text(emat$FireRotation, genus, labels = row.names(ab2mat), cex = cf)
head(ab2mat)
plotBiomass <- read.table(
"sef_Ecology_BiomassPlotMatrix_Ep1_FuncGroupOutlierX_2014-10-21_10.13.08.csv",
header=TRUE, sep=",", na.strings="NA", dec=".", strip.white=TRUE,
stringsAsFactors = F)
head(plotBiomass)
#########################################################
#2B The steps below create a more appropriate dataset by removing and combining some categories.
#For cover, remove non-plant categories, these are unecessary for our analysis.
#dead woody,
plotBiomass2 <- plotBiomass[,!colnames(plotBiomass) == "dead.woody"]
#Calculate untransformed site means from plot-level data
siteBiomass <- summarize(X = plotBiomass2[,4:length(plotBiomass2[1,])], by = plotBiomass2$siteName,
colMeans, stat.name = colnames(plotBiomass2)[4])
colnames(siteBiomass)[1] <- "siteName"
head(siteBiomass)
#Calculate untransformed site means from plot-level data
siteBiomass <- summarize(X = plotBiomass2[,4:length(plotBiomass2[1,])], by = plotBiomass2$siteNo,
colMeans, stat.name = colnames(plotBiomass2)[4])
colnames(siteBiomass)[1] <- "siteName"
head(plotBiomass)
match(plotBiomass$SiteName, plotBiomass$SiteNo)
siteBiomass <- summarize(X = plotBiomass2[,4:length(plotBiomass2[1,])], by = plotBiomass2$SiteNo,
colMeans, stat.name = colnames(plotBiomass2)[4])
colnames(siteBiomass)[1] <- "siteName"
siteBiomass2 <- siteBiomass[,3:(length(siteBiomass[1,]))]
rownames(siteBiomass2) <- siteBiomass[,1]
head(siteBiomass2)
genus <- ab2mat$forb
Genus <- "Forb"
plot(emat$FireRotation, genus, type = "n",
xlab = "Fire Rotation (years)", ylab = "Biomass (Mg/ha)")
text(emat$FireRotation, genus, labels = row.names(ab2mat), cex = cf)
#Create ab2mat object
ab2mat <- biomassOrig
#Create an emat object
emat <- siteEnv3
genus <- ab2mat$forb
Genus <- "Forb"
plot(emat$FireRotation, genus, type = "n",
xlab = "Fire Rotation (years)", ylab = "Biomass (Mg/ha)")
text(emat$FireRotation, genus, labels = row.names(ab2mat), cex = cf)
head(ab2mat)
ro <- data.frame(siteNo = 1:length(rownames(siteEnv3)), siteName = I(rownames(siteEnv3)))
ro2 <- ro[order(ro[,2]),]
#Untransformed biomass data
siteBiomass3 <- data.frame(so = ro2[,1], siteBiomass2)
siteBiomass4 <- siteBiomass3[order(siteBiomass3$so),]
siteBiomass5 <- siteBiomass4[,!colnames(siteBiomass4) %in% c("so")]
#Log-tranformed biomass data
siteBiomassLogTrans3 <- data.frame(so = ro2[,1], siteBiomassLogTrans2)
siteBiomassLogTrans4 <- siteBiomassLogTrans3[order(siteBiomassLogTrans3$so),]
siteBiomassLogTrans5 <- siteBiomassLogTrans4[,!colnames(siteBiomassLogTrans4) %in% c("so")]
#Remove species with no occurences, this is necessary before you can use foa.plots below
biomassOrig <- drop.var(siteBiomass5, min.fo = 1)
biomassLog <- drop.var(siteBiomassLogTrans5, min.fo = 1)
coverOrig <- drop.var(siteCover2, min.fo = 1)
#Create ab2mat object
ab2mat <- biomassOrig
genus <- ab2mat$forb
Genus <- "Forb"
plot(emat$FireRotation, genus, type = "n",
xlab = "Fire Rotation (years)", ylab = "Biomass (Mg/ha)")
text(emat$FireRotation, genus, labels = row.names(ab2mat), cex = cf)
head(ab2mat)
head(emat)
head(siteBiomass)
for(i in 1:length(plotBiomass[,1])){unique(plotBiomass$SiteNo[plotBiomass$siteName == plotBiomass[i,1]])}
answer <- list()
for(i in 1:length(plotBiomass[,1])){answer[[i]] <- unique(plotBiomass$SiteNo[plotBiomass$siteName == plotBiomass[i,1]])}
answer
for(i in 1:length(unique(plotBiomass[,1]))){answer[[i]] <- unique(plotBiomass$SiteNo[plotBiomass$siteName == siteEnv[i,1]])}
aanswer
answer
answer <- list
for(i in 1:length(unique(plotBiomass[,1]))){answer[[i]] <- unique(plotBiomass$SiteNo[plotBiomass$siteName == siteEnv[i,1]])}
answer
Answer <- list()
for(i in 1:length(unique(plotBiomass[,1]))){Answer[[i]] <- unique(plotBiomass$SiteNo[plotBiomass$siteName == siteEnv[i,1]])}
Answer
#4a: Open environmental matrix
siteEnv <- read.table(
"2014.03.13_EnvironmentalMatrix.csv",
header=TRUE, sep=",", na.strings="NA", dec=".", strip.white=TRUE,
stringsAsFactors = F)
#########################################################
#4b: Re-assign column 1 (site names) to  a row name.
siteEnv2 <- siteEnv[,2:(length(siteEnv[1,]))]
rownames(siteEnv2) <- siteEnv[,1]
head(siteEnv2)
#########################################################
#4a: Open environmental matrix
siteEnv <- read.table(
"2014.03.13_EnvironmentalMatrix.csv",
header=TRUE, sep=",", na.strings="NA", dec=".", strip.white=TRUE,
stringsAsFactors = F)
#########################################################
#4b: Re-assign column 1 (site names) to  a row name.
siteEnv2 <- siteEnv[,2:(length(siteEnv[1,]))]
rownames(siteEnv2) <- siteEnv[,2]
head(siteEnv2)
#########################################################
#4b: Re-assign column 1 (site names) to  a row name.
siteEnv2 <- siteEnv[,3:(length(siteEnv[1,]))]
rownames(siteEnv2) <- siteEnv[,2]
#########################################################
#4c: Environmental data, remove data you will not analyze
siteEnv3 <- siteEnv2[,-c(-1,12,13)]
#Column 12 is soil drainage. This data is from USDA Soil Survey and not accurate
siteEnv2
#########################################################
#4c: Environmental data, remove data you will not analyze
siteEnv3 <- siteEnv2[,-c(,12,13)]
#4c: Environmental data, remove data you will not analyze
siteEnv3 <- siteEnv2[-c(,12,13)]
siteEnv3 <- siteEnv2[-c(12,13)]
genus <- ab2mat$forb
Genus <- "Forb"
plot(emat$FireRotation, genus, type = "n",
xlab = "Fire Rotation (years)", ylab = "Biomass (Mg/ha)")
text(emat$FireRotation, genus, labels = row.names(ab2mat), cex = cf)
genus <- ab2mat$forb
Genus <- "Forb"
plot(emat$FireRotation, genus, type = "n",
xlab = "Fire Rotation (years)", ylab = "Biomass (Mg/ha)")
text(emat$FireRotation, genus, labels = row.names(ab2mat), cex = cf)
#Create ab2mat object
ab2mat <- biomassOrig
#Create an emat object
emat <- siteEnv3
#1
genus <- ab2mat$forb
Genus <- "Forb"
plot(emat$FireRotation, genus, type = "n",
xlab = "Fire Rotation (years)", ylab = "Biomass (Mg/ha)")
text(emat$FireRotation, genus, labels = row.names(ab2mat), cex = cf)
siteEnv3
emat
head(ab2mat)
genus <- ab2mat$forb
Genus <- "Forb"
plot(emat$FireRotation, genus, type = "n",
xlab = "Fire Rotation (years)", ylab = "Biomass (Mg/ha)")
text(emat$FireRotation, genus, labels = row.names(emat), cex = cf)
#1
#Forb
#Plot with sites
genus <- ab2mat$forb
Genus <- "Forb"
#Boundary layer regression
blr(log, emat$FireRotation, genus, Genus)
head(plotBiomass)
ab2mat[ab2mat$SiteNo == "A10"]
ab2mat[rowname(ab2mat) == "A10"]
ab2mat[rownames(ab2mat) == "A10"]
ab2mat[row.names(ab2mat) == "A10"]
ab2mat[row.name(ab2mat) == "A10"]
ab2mat[rownames(ab2mat) == "A10"]
rownames(ab2mat)
ab2mat[rownames(ab2mat) == "A10")
ab2mat[rownames(ab2mat) == "A10"]
ab2mat
emat
#Create ab2mat object
ab2mat <- biomassOrig
#Create an emat object
emat <- siteEnv3
#1
#Forb
#Plot with sites
genus <- ab2mat$forb
Genus <- "Forb"
#Boundary layer regression
blr(log, emat$FireRotation, genus, Genus)
dev.off()
#Create ab2mat object
ab2mat <- biomassOrig
#Create an emat object
emat <- siteEnv3
#1
#Forb
#Plot with sites
genus <- ab2mat$forb
Genus <- "Forb"
#Boundary layer regression
blr(log, emat$FireRotation, genus, Genus)
emat$FireRotation
emat$FireRotation[14]
siteEnv3
siteEnv3[14,]
biomassOrig[14,]
length(emat[,1])
length(ab2mat[,1])
cbind(rownames(emat,ab2mat))
cbind(rownames(emat), rownames(ab2mat))
ab2mat <- ab2mat(order(row.names(ab2mat)))
ab2mat <- ab2mat[order(row.names(ab2mat))]
ab2mat <- ab2mat[,order(row.names(ab2mat))]
head(ab2mat)
order(row.names(ab2mat))]
sort(row.names(ab2mat))]
sort(row.names(ab2mat))
ab2mat <- ab2mat[sort(row.names(ab2mat))]
ab2mat <- ab2mat[,sort(row.names(ab2mat))]
ab2mat <- ab2mat[sort(row.names(ab2mat)),]
emat <- emat[sort(row.names(emat)),]
#1
#Forb
#Plot with sites
genus <- ab2mat$forb
Genus <- "Forb"
#Boundary layer regression
blr(log, emat$FireRotation, genus, Genus)
genus <- ab2mat$forb
Genus <- "Forb"
plot(emat$FireRotation, genus, type = "n",
xlab = "Fire Rotation (years)", ylab = "Biomass (Mg/ha)")
text(emat$FireRotation, genus, labels = row.names(emat), cex = cf)
